# External imports
from sqlmodel import Field, SQLModel
import datetime
from decimal import Decimal

# Internal imports
from users.types import UserRoles, UserStatuses
from utils import current_timestamp

class UserBase(SQLModel):
    username: str = Field(index=True, unique=True)
    email: str | None = Field(default=None, unique=True) # Can be unique even if can be None as None is not considered a value by postgres so can be multiple times
    description: str | None = Field(default=None)

class Users(UserBase, table=True):
    id: int | None = Field(default=None, primary_key=True) # Id is optional because it is generated by the databse (just leave it like that)
    password: str | None # Does not have default=None because it is indented that user must explicitly say no password is provided (so it is not a mistake)
    role: str = Field(default=UserRoles.USER.value)
    status: str = Field(default=UserStatuses.NORMAL.value)
    status_detail: str | None = Field(default=None) # For example for setting unban date
    created_at: Decimal = Field(default_factory=current_timestamp)
    updated_at: Decimal = Field(default_factory=current_timestamp)
    deleted_at: Decimal | None = Field(default=None)

class UserCreate(UserBase):
    password: str

class UserResponse(UserBase):
    id: int
    role: str
    status: str
    status_detail: str | None
    created_at: Decimal
    updated_at: Decimal

class UserDeletionResponse(SQLModel):
    message: str
    disclaimer: str