# External imports
from sqlmodel import Field, Session, SQLModel, create_engine, select, Column
import datetime
from decimal import Decimal
from sqlalchemy.dialects.postgresql import JSONB

class UploadBase(SQLModel):
    title: str = Field(index=True, unique=True)
    description: str | None = Field(default=None)

class Uploads(UploadBase, table=True): # Id is optional because it is generated by the databse (just leave it like that and don't think about it too much)
    id: int | None = Field(default=None, primary_key=True)
    type: str
    thumbnail_location: str | None = Field(default=None)
    metadata_type: str | None = Field(default=None)
    metadata_json: dict | None = Field(sa_column=Column(JSONB))
    created_by: int = Field(foreign_key="users.id")
    created_at: Decimal
    updated_at: Decimal
    deleted_at: Decimal | None = Field(default=None)

class UploadCreate(UploadBase):
    pass

class UploadResponse(UploadBase):
    id: int
    type: str
    thumbnail_location: str | None
    metadata_type: str | None
    metadata_json: dict | None
    created_by: int
    created_at: Decimal
    updated_at: Decimal